import { Context, Keyboard } from "../../deps.ts";

type Hook = { [key: string]: (ctx: Context) => Promise<void> };

const retry = new Keyboard()
  .text("–ù–∞—á–Ω–∏—Ç–µ —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞");

const hook: Hook = {
  // Retry Loop
  "–ù–∞—á–Ω–∏—Ç–µ —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞": async (ctx: Context) => {
    await ctx.reply("–†–∞–±–æ—Ç–∞–µ—à—å –ª–∏ —Ç—ã –≤ IT —Å—Ñ–µ—Ä–µ?", {
      parse_mode: "HTML",
      reply_markup: new Keyboard()
        .oneTime()
        .text("–î–∞, —ç—Ç–æ –º–æ—è —Å—Ç–∏—Ö–∏—è üßëüèª‚Äçüíª")
        .row()
        .text("–ù–µ—Ç, –ê–π—Ç–∏ –Ω–µ –º–æ–µ ü§ñ"),
    });
  },

  // Pointer 1
  "–î–∞, —ç—Ç–æ –º–æ—è —Å—Ç–∏—Ö–∏—è üßëüèª‚Äçüíª": async (ctx: Context) => {
    await ctx.reply(`–û—Ç–ª–∏—á–Ω–æ, –∞ —á—Ç–æ –Ω–∞–ø—Ä—è–≥–∞–µ—Ç –≤ —Ä–∞–±–æ—Ç–µ?`, {
      parse_mode: "HTML",
      reply_markup: new Keyboard()
        .oneTime()
        .text("–ö–æ—Ä–æ—Ç–∫–∏–µ –¥–µ–¥–ª–∞–π–Ω—ã ü´†")
        .row()
        .text("–ë–∞–≥–∏ –≤ –∫–æ–¥–µ ‚ùå")
        .row()
        .text("–ú–Ω–æ–∂–µ—Å—Ç–≤–æ –ø—Ä–∞–≤–æ–∫ üò°"),
    });
  },

  // Pointer 1, 1
  "–ë–∞–≥–∏ –≤ –∫–æ–¥–µ ‚ùå": async (ctx: Context) => {
    await ctx.reply(`–ß—Ç–æ —Ö—É–∂–µ: –∫–æ–≥–¥–∞ –æ—à–∏–±–∞–µ—à—å—Å—è —Ç—ã –∏–ª–∏ –∫—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–π?`, {
      parse_mode: "HTML",
      reply_markup: new Keyboard()
        .oneTime()
        .text('–Ø "—Ç—ã" üòî')
        .row()
        .text("–ö—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–π üßê"),
    });
  },

  // Pointer 1, 1, 1 (Done!)
  '–Ø "—Ç—ã" üòî': async (ctx: Context) => {
    await ctx.replyWithSticker(
      "CAACAgIAAxkBAAPUY6k6oCR_l-frSb_uZIByj2vcNpcAAlAmAALMCDlJ0kZVi7UqMm4sBA",
    );

    await ctx.reply(
      `–Ø –≤–∏–∂—É, —á—Ç–æ –≤ 2023 —Ç—ã —Å–ø—Ä–∞–≤–∏—à—å—Å—è —Å —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å—é –∏ ` +
        `–ø—Ä–∏–º–µ—à—å, —á—Ç–æ –≤—Å–µ –≤—Å–µ –º—ã –Ω–µ –∏–¥–µ–∞–ª—å–Ω—ã –∏ –∏–º–µ–µ–º –ø—Ä–∞–≤–æ –æ—à–∏–±–∞—Ç—å—Å—è. ` +
        `–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Ä–∞–±–æ—Ç–∞ –ø–æ–π–¥–µ—Ç –ª–µ–≥–∫–æ –∏ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ! üî•`,
      {
        reply_markup: retry,
      },
    );
  },

  // Pointer 1, 1, 2 (Done!)
  "–ö—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–π üßê": async (ctx: Context) => {
    await ctx.replyWithSticker(
      "CAACAgIAAxkBAAPaY6k67M6c2hFUrkvCHufjv06FsN0AAn4mAAKR6jhJMNAS6lczB9YsBA",
    );

    await ctx.reply(
      `–í 2023 —Ç–µ–±—è –∂–¥–µ—Ç –¥–æ–ª–≥–∞—è —Ä–∞–±–æ—Ç–∞ –Ω–∞–¥ –æ—à–∏–±–∫–∞–º–∏...–∫–æ–ª–ª–µ–≥. –ù–æ –Ω–µ ` +
        `—Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Å—è, —ç—Ç–æ –Ω–µ–Ω–∞–¥–æ–ª–≥–æ! –ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –≤—ã –ø–æ–≥–æ–≤–æ—Ä–∏—Ç–µ –∏ –ø—Ä–∏–¥–µ—Ç–µ ` +
        `–∫ –∫–æ–º–ø—Ä–æ–º–∏—Å—Å—É, —Ä–∞–±–æ—Ç–∞ –ø–æ–π–¥–µ—Ç –≥–æ—Ä–∞–∑–¥–æ –ª–µ–≥—á–µ –∏ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–µ–µ.`,
      {
        reply_markup: retry,
      },
    );
  },

  // Pointer 1, 2
  "–ö–æ—Ä–æ—Ç–∫–∏–µ –¥–µ–¥–ª–∞–π–Ω—ã ü´†": async (ctx: Context) => {
    await ctx.reply(`–ü–æ–Ω–∏–º–∞—é, –∫–æ—Ä–æ—Ç–∫–∏–µ —Å—Ä–æ–∫–∏. –ê –∫–∞–∫ —Ä–µ—à–∞–µ—à—å –ø—Ä–æ–±–ª–µ–º—É?`, {
      parse_mode: "HTML",
      reply_markup: new Keyboard()
        .oneTime()
        .text(`–î–æ–≥–æ–≤–∞—Ä–∏–≤–∞—é—Å—å —Å –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º ü§ù`)
        .row()
        .text(`–†–∞–±–æ—Ç–∞—é –±–µ–∑ –≤—ã—Ö–æ–¥–Ω—ã—Ö üòï`)
        .row()
        .text(`–ì—Ä—É—â—É –∏ –Ω–µ —É—Å–ø–µ–≤–∞—é üò´`),
    });
  },

  // Pointer 1, 2, 1 (Done!)
  "–î–æ–≥–æ–≤–∞—Ä–∏–≤–∞—é—Å—å —Å –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–º ü§ù": async (ctx: Context) => {
    await ctx.replyWithSticker(
      "CAACAgIAAxkBAAO0Y6k4fCFHCZLpNRqmb7FCSOoY3qIAAtwlAAJxgzhJwaNgFVKk2KYsBA",
    );

    await ctx.reply(
      `–Ø –≤–∏–∂—É, —á—Ç–æ —Ç—ã –æ—á–µ–Ω—å —Ä–µ—à–∏—Ç–µ–ª—å–Ω—ã–π –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π ` +
        `—á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π —Å —É–º–æ–º –ø–æ–¥—Ö–æ–¥–∏—Ç –∫ –ª—é–±–æ–º—É –∑–∞–¥–∞–Ω–∏—é, ` +
        `–±—É–¥—å —Ç–æ —Ä–∞–±–æ—Ç–∞ –∏–ª–∏ –¥—Ä—É–≥–∏–µ –¥–µ–ª–∞. –í 2023 –≥–æ–¥—É —Ç—ã –∑–∞–π–º–µ—à—å—Å—è ` +
        `—Ä–µ—à–µ–Ω–∏–µ–º –≥—Ä–∞–Ω–¥–∏–æ–∑–Ω—ã—Ö –∑–∞–¥–∞—á, –±—É–¥–µ—à—å –æ—á–µ–Ω—å ` +
        `–ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–º –∏ —Å–≤–æ–∏–º –ø—Ä–∏–º–µ—Ä–æ–º –≤–¥–æ—Ö–Ω–æ–≤–∏—à—å –Ω–µ–º–∞–ª–æ ` +
        `–ª—é–¥–µ–π. ‚òÑ`,
      {
        reply_markup: retry,
      },
    );
  },

  // Pointer 1, 2, 2 (Done!)
  "–†–∞–±–æ—Ç–∞—é –±–µ–∑ –≤—ã—Ö–æ–¥–Ω—ã—Ö üòï": async (ctx: Context) => {
    await ctx.replyWithSticker(
      "CAACAgIAAxkBAAIBEmOpParLT1SX2xKye6xmfyIquS-mAAIcHwACKQNJSaTY-iJ5d7TeLAQ",
    );

    await ctx.reply(
      `–Ø –≤–∏–∂—É...–≤–∏–∂—É, —á—Ç–æ —Ç–µ–±–µ –ø–æ—Ä–∞ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å –∏ –Ω–∞–±—Ä–∞—Ç—å—Å—è —Å–∏–ª. ` +
        `–í 2023 –≥–æ–¥—É —Ç–µ–±–µ –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –Ω–∞—É—á–∏—Ç—å—Å—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è—Ç—å —Å–≤–æ–µ ` +
        `–≤—Ä–µ–º—è, –æ—Ç–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –æ—Ç —Å–≤–µ—Ä—Ö—É—Ä–æ—á–Ω–æ–π —Ä–∞–±–æ—Ç—ã –∏ –ø—Ä–æ–¥–ª–µ–≤–∞—Ç—å ` +
        `–¥–µ–¥–ª–∞–π–Ω—ã. –ù–µ –∑–∞–±—ã–≤–∞–π –ø—Ä–æ –æ—Ç–¥—ã—Ö –∏ —Å–æ–Ω! üíô`,
      {
        reply_markup: retry,
      },
    );
  },

  // Pointer 1, 2, 3 (Done!)
  "–ì—Ä—É—â—É –∏ –Ω–µ —É—Å–ø–µ–≤–∞—é üò´": async (ctx: Context) => {
    await ctx.replyWithSticker(
      "CAACAgIAAxkBAAPRY6k6UubkW2WeDugI8dypJA9FdSMAAuglAAIrIzhJ90N8_vc6pW4sBA",
    );

    await ctx.reply(
      `–í 2023 —Ç–µ–±—è –∂–¥—É—Ç –±–æ–ª—å—à–∏–µ —É—Å–ø–µ—Ö–∏ –Ω–∞ —Ä–∞–±–æ—Ç–µ. ` +
        `–í—Å–µ –∑–∞–º–µ—Ç—è—Ç, –∫–∞–∫–æ–π —Ç—ã —Ü–µ–Ω–Ω—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫, –Ω–æ... ` +
        `—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç—ã –Ω–∞—É—á–∏—à—å—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–æ–≤—ã–≤–∞—Ç—å ` +
        `—Å–≤–æ–µ –≤—Ä–µ–º—è ‚è±`,
      {
        reply_markup: retry,
      },
    );
  },

  // Pointer 1, 3
  "–ú–Ω–æ–∂–µ—Å—Ç–≤–æ –ø—Ä–∞–≤–æ–∫ üò°": async (ctx: Context) => {
    await ctx.reply(`–ê —á—Ç–æ –¥–µ–ª–∞–µ—à—å, –∫–æ–≥–¥–∞ –ø—Ä–∞–≤–æ–∫ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ?`, {
      reply_markup: new Keyboard()
        .oneTime()
        .text("–û—Å–ø–∞—Ä–∏–≤–∞—é –∫–∞–∂–¥—É—é!")
        .row()
        .text("–í–Ω–æ—à—É, —á—Ç–æ –ø–æ–¥–µ–ª–∞—Ç—å"),
    });
  },

  // Pointer 1, 3, 1 (Done!)
  "–û—Å–ø–∞—Ä–∏–≤–∞—é –∫–∞–∂–¥—É—é!": async (ctx: Context) => {
    await ctx.replyWithSticker(
      "CAACAgIAAxkBAAPdY6k7JGIZYEHKs-7Sgx4WMxsWL8wAAtwlAAJxgzhJwaNgFVKk2KYsBA",
    );

    await ctx.reply(
      `–í 2023 —Ç–µ–±—è –∂–¥—É—Ç –∂–∞—Ä–∫–∏–µ —Å–ø–æ—Ä—ã –∏ –±–µ–∑—É–¥–µ—Ä–∂–Ω—ã–µ –¥–µ–±–∞—Ç—ã. ` +
        `–ü–æ–º–Ω–∏, —á—Ç–æ –æ—Ç –∫—Ä–∏—Ç–∏–∫–∏ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –Ω–∏–∫—Ç–æ –Ω–µ –∑–∞—â–∏—â–µ–Ω. ` +
        `–û—Ç–Ω–æ—Å–∏—Ç–µ—Å—å —Å –ø–æ–∑–∏—Ç–∏–≤–æ–º –∫ –ø–æ–¥–æ–±–Ω—ã–º –Ω–µ—É—Ä—è–¥–∏—Ü–∞–º –∏ —Ä–∞–±–æ—Ç–∞—Ç—å —Å—Ç–∞–Ω–µ—Ç –≥–æ—Ä–∞–∑–¥–æ –ø—Ä–∏—è—Ç–Ω–µ–µ`,
      {
        reply_markup: retry,
      },
    );
  },

  // Pointer 1, 3, 2 (Done!)
  "–í–Ω–æ—à—É, —á—Ç–æ –ø–æ–¥–µ–ª–∞—Ç—å": async (ctx: Context) => {
    await ctx.replyWithSticker(
      "CAACAgIAAxkBAAPgY6k7ZEVmRHKLLixFu9jgLDrzdJsAAiAoAAKYgTlJsR4nEWjPRXEsBA",
    );

    await ctx.reply(
      `–¢–≤–æ–µ–º—É —Å–∞–º–æ–∫–æ–Ω—Ç—Ä–æ–ª—é –º–æ–∂–Ω–æ –ø–æ–∑–∞–≤–∏–¥–æ–≤–∞—Ç—å! –í –Ω–æ–≤–æ–º –≥–æ–¥—É ` +
        `—Ç–µ–±—è —Ç–∞–∫–∂–µ –∂–¥–µ—Ç –±–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∞–≤–æ–∫, –Ω–æ –∏ —Ö–æ—Ä–æ—à–µ–≥–æ ` +
        `–Ω–µ –º–∞–ª–æ - —Ç—ã –æ—Å–≤–æ–∏—à—å –Ω–æ–≤—ã–π –Ω–∞–≤—ã–∫ –∏ –Ω–∞—É—á–∏—à—å—Å—è —Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ ` +
        `—Å–∏—Ç—É–∞—Ü–∏–∏ —Å —Ä–∞–∑–Ω—ã—Ö —Å—Ç–æ—Ä–æ–Ω.`,
      {
        reply_markup: retry,
      },
    );
  },

  // Pointer 2
  "–ù–µ—Ç, –ê–π—Ç–∏ –Ω–µ –º–æ–µ ü§ñ": async (ctx: Context) => {
    await ctx.reply(`–ö–∞–∫ –≤ —Ü–µ–ª–æ–º –ø—Ä–æ—à–µ–ª —Ä–∞–±–æ—á–∏–π –≥–æ–¥?`, {
      parse_mode: "HTML",
      reply_markup: new Keyboard()
        .oneTime()
        .text("–¢—Ä—É–¥–Ω–æ, –Ω–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ üòõ")
        .row()
        .text("–í —Ü–µ–ª–æ–º –Ω–µ–ø–ª–æ—Ö–æ üôÇ")
        .row()
        .text("–ö–æ–≥–¥–∞ –æ—Ç–ø—É—Å–∫?? ü•≤"),
    });
  },

  // Pointer 2, 1
  "–¢—Ä—É–¥–Ω–æ, –Ω–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ üòõ": async (ctx: Context) => {
    await ctx.reply(`–ß–µ–≥–æ –∂–¥–µ—à—å –æ—Ç 2023 –≥–æ–¥–∞?`, {
      parse_mode: "HTML",
      reply_markup: new Keyboard()
        .oneTime()
        .text("–ë–æ–ª—å—à–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ ü§üüèª")
        .row()
        .text("–•–æ—á—É –æ—Ç–¥–æ—Ö–Ω—É—Ç—å üò¥"),
    });
  },

  // Pointer 2, 1, 1 (Done!)
  "–ë–æ–ª—å—à–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ ü§üüèª": async (ctx: Context) => {
    await ctx.replyWithSticker(
      "CAACAgIAAxkBAAPjY6k7wRzmniC8BcJbBos3VZ9lIjwAAlAmAALMCDlJ0kZVi7UqMm4sBA",
    );

    await ctx.reply(
      `–Ø –≤–∏–∂—É, —á—Ç–æ –≤ 2023 –≥–æ–¥—É —Ç–µ–±—è –∂–¥—É—Ç –∏–Ω–µ—Ç–µ—Ä–µ—Å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã ` +
        `–∏ –Ω–æ–≤—ã–µ –æ—Ç–∫—Ä—ã—Ç–∏—è. –ù–æ –Ω–µ –≤—Å–µ —Ç–∞–∫ —Ä–∞–¥—É–∂–Ω–æ, —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ ` +
        `–±—É–¥–µ—Ç –æ—á–µ–Ω—å –º–∞–ª–æ.. üïë`,
      {
        reply_markup: retry,
      },
    );
  },

  // Pointer 2, 1, 2 (Done!)
  "–•–æ—á—É –æ—Ç–¥–æ—Ö–Ω—É—Ç—å üò¥": async (ctx: Context) => {
    await ctx.replyWithSticker(
      "CAACAgIAAxkBAAPmY6k8BJuuHua2zYEZ9bWuXUepg-AAAuglAAIrIzhJ90N8_vc6pW4sBA",
    );

    await ctx.reply(
      `–í 2023 –≥–æ–¥—É —Ç–µ–±—è –∂–¥—É—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –∏ –º–Ω–æ–≥–æ —Ä–∞–±–æ—Ç—ã, –æ–¥–Ω–∞–∫–æ ` +
        `—Ç—ã –Ω–µ –±—É–¥–µ—à—å –∑–∞–±—ã–≤–∞—Ç—å –æ—Ç–¥—ã—Ö–∞—Ç—å –∏ –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ —Å–µ–±–µ, —á—Ç–æ –ø–ª–æ–¥–æ—Ç–≤–æ—Ä–Ω–æ ` +
        `—Å–∫–∞–∂–µ—Ç—Å—è –Ω–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–≤–æ–µ–≥–æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–∞.`,
      {
        reply_markup: retry,
      },
    );
  },

  // Pointer 2, 2
  "–í —Ü–µ–ª–æ–º –Ω–µ–ø–ª–æ—Ö–æ üôÇ": async (ctx: Context) => {
    await ctx.replyWithSticker(
      "CAACAgIAAxkBAAIBAAFjqTysdE1UeXHZDx890bLJLvkYZwACfiYAApHqOEkw0BLqVzMH1iwE",
    );

    await ctx.reply(`–ö–∞–∫–∏–µ –ø–ª–∞–Ω—ã –Ω–∞ 2023 –≥–æ–¥?`, {
      parse_mode: "HTML",
      reply_markup: new Keyboard()
        .oneTime()
        .text("–†–∞–±–æ—Ç–∞—Ç—å –µ—â–µ —É—Å–µ—Ä–¥–Ω–µ–µ")
        .row()
        .text("–û—Ç–ø—É—Å–∫!"),
    });
  },

  // Pointer 2, 2, 1 (Done!)
  "–†–∞–±–æ—Ç–∞—Ç—å –µ—â–µ —É—Å–µ—Ä–¥–Ω–µ–µ": async (ctx: Context) => {
    await ctx.replyWithSticker(
      "CAACAgIAAxkBAAP9Y6k8Ylk9B7WzLtwkddaWV2Ea6AEAAigrAALq-zlJfEC4cSJ_BXIsBA",
    );

    await ctx.reply(
      `–í 2023 –≥–æ–¥—É —Ç–≤–æ–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –Ω–∞ –º–∞–∫—Å–∏–º—É–º! –¢—ã –ø–æ–∫–æ—Ä–∏—à—å ` +
        `–Ω–æ–≤—ã–µ –≤–µ—Ä—à–∏–Ω—ã, –æ—Ç–∫—Ä–æ–µ—à—å –¥–ª—è —Å–µ–±—è –º–Ω–æ–≥–æ –Ω–æ–≤–æ–≥–æ –∏ –Ω–µ —Ä–∞–∑ —É–¥–∏–≤–∏—à—å –æ–∫—Ä—É–∂–∞—é—â–∏—Ö.`,
      {
        reply_markup: retry,
      },
    );
  },

  // Pointer 2, 2, 1 (Done!)
  "–û—Ç–ø—É—Å–∫!": async (ctx: Context) => {
    await ctx.replyWithSticker(
      "CAACAgIAAxkBAAIBCWOpPPlVnDNJMS1QWWq0rWGm46HhAALcJQACcYM4ScGjYBVSpNimLAQ",
    );

    await ctx.reply(
      `2023 –≥–æ–¥ –±—É–¥–µ—Ç –¥–æ–≤–æ–ª—å–Ω–æ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–º –∏ –ø–æ–ª–Ω—ã–º –Ω–æ–≤—ã—Ö –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–π –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π. ` +
        `–¢—ã —Å—É–º–µ–µ—à—å –Ω–∞–±—Ä–∞—Ç—å—Å—è —Å–∏–ª –∏ –±—É–¥–µ—à—å –ø–æ–ª–æ–Ω —ç–Ω—Ç—É–∑–∏–∞–∑–º–∞ –∑–∞–Ω—è—Ç—å—Å—è –Ω–æ–≤—ã–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏.`,
      {
        reply_markup: retry,
      },
    );
  },

  // Pointer 2, 3
  "–ö–æ–≥–¥–∞ –æ—Ç–ø—É—Å–∫?? ü•≤": async (ctx: Context) => {
    await ctx.reply(`–ê –Ω–æ–≤–æ–≥–æ–¥–Ω–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø—Ä–∏—Å—É—Ç—Å–≤—É–µ—Ç?`, {
      parse_mode: "HTML",
      reply_markup: new Keyboard()
        .oneTime()
        .text("–ù–µ—Ç")
        .row()
        .text("–ü–æ–ª–Ω—ã–π –¥–∂–∏–Ω–≥–ª –±–µ–ª–ª—Å")
        .row()
        .text("–£–∂–µ –Ω–∞ –ø–æ–¥—Ö–æ–¥–µ"),
    });
  },

  // Pointer 2, 3, 1 (Done!)
  "–ù–µ—Ç": async (ctx: Context) => {
    await ctx.replyWithSticker(
      "CAACAgIAAxkBAAIBDGOpPRsoB0AVWIWqtV2h_hvOCoj_AALcJQACcYM4ScGjYBVSpNimLAQ",
    );

    await ctx.reply(
      `–¢–≤–æ—è —É—Å—Ç–∞–ª–æ—Å—Ç—å –∏ –≤—ã–≥–æ—Ä–∞–Ω–∏–µ –ø—Ä–æ–π–¥—É—Ç, —Ç—ã –æ—Ç–¥–æ—Ö–Ω–µ—à—å –∏ —Å–º–æ–∂–µ—à—å –≤–∑—è—Ç—å—Å—è –∑–∞ ` +
        `–∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã —Å –Ω–æ–≤—ã–º–∏ —Å–∏–ª–∞–º–∏. –ù–µ –∑–∞–±—ã–≤–∞–π –ø—Ä–æ –∑–∞–±–æ—Ç—É –æ —Å–≤–æ–µ–º –º–µ–Ω—Ç–∞–ª—å–Ω–æ–º ` +
        `–∏ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–º –∑–¥–æ—Ä–æ–≤—å–µ`,
      {
        reply_markup: retry,
      },
    );
  },

  // Pointer 2, 3, 2 (Done!)
  "–ü–æ–ª–Ω—ã–π –¥–∂–∏–Ω–≥–ª –±–µ–ª–ª—Å": async (ctx: Context) => {
    await ctx.replyWithSticker(
      "CAACAgIAAxkBAAOlY6k2faHV6ng2L0zkdySFKTXL6Q4AAncoAAITojhJoZ5GzRfxCQwsBA",
    );

    await ctx.reply(
      `–û—Ç–ª–∏—á–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π –Ω–∞—Å—Ç—Ä–æ–π –ø–æ–º–æ–≥—É—Ç —Ç–µ–±–µ –≤–æ–π—Ç–∏ –≤ 2023 —Å –Ω–æ–≤—ã–º–∏ ` +
        `—Å–∏–ª–∞–º–∏ –∏ —Ä–∞–±–æ—á–∏–π –≥–æ–¥ –±—É–¥–µ—Ç –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–∏–π –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π. –¢—ã –±—É–¥–µ—à—å —Å–∏—è—Ç—å —è—Ä—á–µ, —á–µ–º ` +
        `–∑–≤–µ–∑–¥–∞ –Ω–∞ –Ω–æ–≤–æ–≥–æ–¥–Ω–µ–π –µ–ª–∫–µ.`,
      {
        reply_markup: retry,
      },
    );
  },

  // Pointer 2, 3, 3 (Done!)
  "–£–∂–µ –Ω–∞ –ø–æ–¥—Ö–æ–¥–µ": async (ctx: Context) => {
    await ctx.replyWithSticker(
      "CAACAgIAAxkBAAIBD2OpPU-HkTBknoBNMTnDIvBcO5RcAAIoKwAC6vs5SXxAuHEifwVyLAQ",
    );

    await ctx.reply(
      `2023 –≥–æ–¥ –æ–±–µ—â–∞–µ—Ç –±—ã—Ç—å –∑–∞–º–∞–Ω—á–∏–≤—ã–º –∏ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–º, –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å –∏ –∑–∞–∫–æ–Ω—á–∏—Ç—å ` +
        `–¥–µ–ª–∞, –¥–æ –∫–æ—Ç–æ—Ä—ã—Ö –≤–µ—Å—å –≥–æ–¥ –Ω–µ –¥–æ—Ö–æ–¥–∏–ª–∏ —Ä—É–∫–∏. –ó–∞—Ä—è–∂–∞–π—Ç–µ—Å—å –ø–æ–∑–∏—Ç–∏–≤–æ–º —É–∂–µ —Å–µ–π—á–∞—Å, 23 - ` +
        `–≤–∞—à –≥–æ–¥.`,
      {
        reply_markup: retry,
      },
    );
  },
};

export default hook;
