import { Composer, Context, InlineKeyboard } from "../deps.ts";

const composer = new Composer();

export const message1 = (ctx: Context): string =>
  `<b>–ü—Ä–∏–≤–µ—Ç, ${ctx?.from?.first_name}!</b> \n` +
  `\n` +
  `–° –Ω–∞—Å—Ç—É–ø–∞—é—â–∏–º –ù–æ–≤—ã–º –≥–æ–¥–æ–º!`;

export const message2 =
  `–Ø ‚Äî –ò–Ω–Ω–æ, –≤–æ–ª—à–µ–±–Ω–∏–∫ —Å —ç–º–ø–∞—Ç–∏–µ–π. –Ø –¥–∞—Ä—é –ª—é–¥—è–º —Ç–æ–ª—å–∫–æ —Ç–æ, —á—Ç–æ –∏–º –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É –Ω—É–∂–Ω–æ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å üòå \n` +
  `\n` +
  `–•–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ–π –ø–æ–¥–∞—Ä–æ–∫? –û—Ç–≤–µ—Ç—å –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤!`;

export const keyboard = new Keyboard()
  .url("Jamiyat", "https://t.me/xinuxuz")
  .url("Web Sahifa", "https://xinux.uz");

composer.command("start", async (ctx: Context): Promise<void> => {
  if (ctx.message!.is_topic_message) {
    await ctx.reply(message, {
      message_thread_id: ctx.message!.message_thread_id,
      parse_mode: "HTML",
      reply_markup: keyboard,
    });
  } else {
    await ctx.reply(message, {
      parse_mode: "HTML",
      reply_markup: keyboard,
    });
  }
});

export default composer;
